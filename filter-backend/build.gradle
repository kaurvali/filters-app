plugins {
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'jacoco'
}

group = 'io.kaurvali'
version = '1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

configurations {
    compileOnly{
        extendsFrom annotationProcessor
    }
}

bootJar {
    archiveFileName = "filter.jar"
}

repositories {
    mavenCentral()
}

ext {
    lombokVersion = "1.18.34"
    springDocVersion = "2.6.0"
    logBookVersion = "3.9.0"
    okHttpVersion = "4.12.0"
    liquibaseVersion = "4.28.0"
    postgreSqlVersion = "42.7.3"
    jacksonDatabindVersion = "2.17.2"
    hypersistenceUtilsVersion = "3.8.1"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}"
    implementation "io.hypersistence:hypersistence-utils-hibernate-63:${hypersistenceUtilsVersion}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
    implementation "org.zalando:logbook-spring-boot-autoconfigure:${logBookVersion}"
    implementation "org.zalando:logbook-logstash:${logBookVersion}"
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    implementation "org.postgresql:postgresql:${postgreSqlVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.squareup.okhttp3:mockwebserver:${okHttpVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

test {
    useJUnitPlatform()
}

check {
    dependsOn test
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        xml.destination layout.buildDirectory.file('reports/jacoco/jacocoReport.xml').get().asFile
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/**Application.class", "**/**Config.class", "**/**Properties.class", "**/**Swagger.class", "**/domain/*"
            ])
        }))
    }
}